rm(list = ls())
##### phyloseq ######

library(phyloseq)

#read data
otudata <- read.csv("normal_otu_onlyHF_singletreat.csv", header = TRUE)
otutax <- read.csv("taxa_divided.csv")
samdata <- read.csv("MetaData_onlyHF_singletreat.csv")

#change row labels
#install.packages("tidyverse")
library(tidyverse)

otudata$OTU_ID <- sub(otudata$OTU_ID, 
                  pattern = "OTU", replacement = "")

otu_data <- otudata %>% remove_rownames %>% column_to_rownames(var="OTU_ID")


otutax$out.id<- sub(otutax$out.id, 
                     pattern = "OTU", replacement = "")

otu_taxa <- otutax %>% remove_rownames %>% column_to_rownames(var="out.id")

#rownames(samdata) <-samdata$Label

sam_data<- samdata %>% remove_rownames %>% column_to_rownames(var="Site")
sam_data <- sam_data %>% mutate_all(na_if,"")

#coerce matrix (taxa needs to be in a matrix format)

test <- as.matrix(otu_taxa, rownames.force = NA)

# setting data to phyloseq format

library(phyloseq)
OTU <- otu_table(otu_data, taxa_are_rows = TRUE)
TAX <-  tax_table(test)
SAM <- sample_data(sam_data)


# combine physeq tables into 1 unit
table <- phyloseq(OTU, TAX)

physeq1 <- merge_phyloseq(table, SAM)

##### alpha visualization #####


#shannon <- estimate_richness(physeq1, split = TRUE, measures = "Shannon")

p <-plot_richness(physeq1, x="study.divid", measures="Shannon", 
                  title = "Alpha Diversity Measurment of Nitrogen, Invasion, and Warming Treatments") 
               

p

plot <- p + geom_boxplot(data = p$data,aes(x=study.divid, y=value, color = NULL), outlier.alpha = 0) + #outlier=0 because it is in jitter group
  scale_x_discrete(limits = labels.study.divid ) +
  geom_jitter(width = 0.2,  alpha = 0.8, color = "cornflowerblue")+
  xlab("Treatment") +
  ylab("Shannon Diversity Index")+
  theme(panel.grid = element_blank(),
        legend.position = "none",
        panel.background = element_rect(fill = "white"),
        panel.border = element_rect(color = "black", fill = NA, size = 0.5),
        plot.title = element_text(hjust = 0.5),
        plot.caption = element_text(hjust = 0),
        axis.text.x = element_text(angle = 50, vjust = 1, hjust=1, size = 10), 
        axis.title.x = element_text(color="black", vjust=1),
        axis.title.y = element_text(color="black" , vjust=1))+
  theme(plot.margin = unit(c(.5,.5,.5,.7), "cm"))+
  theme(strip.background = element_rect(colour="black", fill="white",
                                        size=0.5, linetype="solid"))


plot$layers
plot$layers <- plot$layers[-1]

plot

final <- plot + geom_vline(xintercept = 2.5, alpha = 0.3) + geom_vline(xintercept = 4.5, alpha = 0.3) + 
  geom_vline(xintercept = 6.5, size = 1) +   geom_vline(xintercept = 8.5, alpha = 0.3)+
  geom_vline(xintercept = 10.5, alpha = 0.3) +   geom_vline(xintercept = 12.5, size = 1)+
  geom_vline(xintercept = 14.5, alpha = 0.3)+   geom_vline(xintercept = 16.5, alpha = 0.3)

final

library(svglite)

#This actually save the plot in a image
ggsave(file="alpha.svg", plot=final, width=14, height=8)

# change position in figure
labels <- c("Control - Chronic N", "Control - OakRecip", "Nitrogen ", "Control - SWaN", "Nitrogen/Invaded ", "Warm/Invaded ", "Control (GM)", "Invaded ", "Control (Warm PH/SWaN)", "Warm " )

labels.KindOfDivided <- c("Control Nitrogen", "Nitrogen", "Control Invasion", "Invasion", "Control Warm", "Warm", "Control SWaN",
                          "Invasion - SWaN", "Nitrogen - SWaN", "Nitrogen/Invasion - SWaN", "Warm - SWaN", "Warm/Invaded - SWaN")

labels.study.divid <- c("Control* N Study #1", "Nitrogen Study #1","Control N Study #2", "Nitrogen Study #2", "Control N Study #3", "Nitrogen Study #3", "Control* Invaded Study #1",
                        "Invaded Study #1", "Control Invaded Study #2", "Invaded Study #2", "Control Invaded Study #3", "Invaded Study #3","Control* Warm Study #1", "Warm Study #1", "Control Warm Study #2", 
                        "Warm Study #2", "Control Warm Study #3", "Warm Study #3")


##### alpha ANOVA ####

#https://rpubs.com/lconteville/713954
richness <- estimate_richness(physeq1)

# #Analysis of Variance of shannon alpha diversity compared to variables
anova.sh = aov(richness$Shannon ~ sample_data(physeq1)$KindOfGrouped)
summary(anova.sh)

#Tukey Honest Significant Differences -- confidence intervals between differences of the means of factors

tukey <- TukeyHSD(anova.sh)

Tukey <- as.data.frame(tukey$sample_data)

write.csv(Tukey,"alpha.tukey.csv")

# library(vegan)
# 
# 
# otu_t <- t(otu_data)
# 
# write.csv(alphaotu, "alpha_otu.csv")
# 
# t_otu <- read.csv("transpose_otu.csv", header = TRUE)
# 
# t_otu$X <- sub(t_otu$X, 
#                  pattern = "OTU", replacement = "")
# 
# t_otu <- t_otu %>% remove_rownames %>% column_to_rownames(var="X")
# 
# 
# t_otu$Alpha <- diversity(t_otu,
#                             MARGIN = 1,
#                             index = "shannon")
# alpha_otu <- t(t_otu)
# 
# alphaotu <- as.data.frame(alpha_otu)
# 
# otu_year_group <- read.csv("Finalized_Metadata.csv")
# 
# 
# #Analysis of Variance of shannon alpha diversity compared to variables
# mixed_alpha <- aov(Alpha ~ Grouped, data = otu_year_group)
# summary(mixed_alpha)
# 
# #Tukey Honest Significant Differences -- confidence intervals between differences of the means of factors
# TukeyHSD(mixed_alpha)
# 
# write.csv(otuall.t, "otu_alpha_2.csv", row.names =TRUE)


#### Chao Shannon ####
library(iNEXT)

ChaoShannon <- ChaoShannon(otu_data, datatype = "abundance")
write.csv(ChaoShannon, "ChaoShannon.csv")

shannon <- read.csv("ChaoShannon.csv", header = TRUE)

#Analysis of Variance of shannon alpha diversity compared to variables
Chao <- aov(Observed ~ Grouped, data = shannon)
summary(Chao)

#Tukey Honest Significant Differences -- confidence intervals between differences of the means of factors
TukeyHSD(Chao)


##### beta visualization ####

#install.packages("betapart")
library(betapart)
library(vegan)
library(data.table)
library(dplyr)
library(tidyverse)


## MDS ##
t_otu <- t(otu_data)

t_otu <- as.data.frame(t_otu)

beta.data <- bray.part(t_otu)

mds<- metaMDS(beta.data$bray)

mds_data <- as.data.frame(mds$points)

# stress =0.1451684


mds_data$SampleID <- rownames(mds_data)
sam_data$SampleID <- rownames(sam_data)
mds_data <- dplyr::left_join(mds_data, sam_data)


# create palette
#install.packages("RColorBrewer")
library(RColorBrewer)
brewer.pal(10, "Spectral")
library(randomcoloR)
n <- 10
palette <- distinctColorPalette(n)



#plot
library(ggplot2)

mds_data$shape<-paste(sam_data$Control)

p <-  ggplot(mds_data,aes(x = MDS1, y = MDS2, color = study.divid))+
  geom_point(size = 3)+
  scale_shape_manual(values=c(2,3,4,7,8,10,19))+
  labs(shape = "study.divid", colour = "Treatment")+
  stat_ellipse(size =.5) +
  scale_colour_discrete(na.translate = FALSE)+
  theme(panel.grid = element_blank(),
        panel.background = element_rect(fill = "white"),
        panel.border = element_rect(color = "black", fill = NA, size = 0.5),
        plot.title = element_text(hjust = 0.5),
        plot.caption = element_text(hjust = 0),
        axis.title.x = element_text(color="black", vjust=1),
        axis.title.y = element_text(color="black" , vjust=1))+
  theme(strip.background = element_rect(colour="black", fill="white"))


#add plot labels
p + labs(title = "",
              caption = "")

###seperate mds### ######


p.nitrogen1 <-  ggplot(mds_data,aes(x = MDS1, y = MDS2, color = n1))+
  geom_point(size = 3)+
  scale_shape_manual(values=c(2,3,4,7,8,10,19))+
  stat_ellipse(size =.5) +
  scale_color_manual(values = cbbPalette, labels = c("Control", "Treatment"), na.translate = FALSE) +
  xlim(-0.6,0.6)+
  ylim(-0.6,0.7)+
  theme(panel.grid = element_blank(),
        panel.background = element_rect(fill = "white"),
        panel.border = element_rect(color = "black", fill = NA, size = 0.5),
        plot.title = element_text(hjust = 0.01, vjust=-7, face = "bold"),
        plot.caption = element_text(hjust = 0),
        axis.title.x = element_blank(),
        axis.title.y = element_blank())+
  theme(plot.margin = unit(c(-1.4,-1,-1.4,-1), "cm"))+
  theme(strip.background = element_rect(colour="black", fill="white"))+
  labs(title = "G")+
  theme(panel.grid.major  = element_line(color ="gray93",size = 0.5,linetype = 1))

p.nitrogen1

p.nitrogen2 <-  ggplot(mds_data,aes(x = MDS1, y = MDS2, color = n2))+
  geom_point(size = 3)+
  scale_shape_manual(values=c(2,3,4,7,8,10,19))+
  labs(shape = "Control Type", colour = "")+
  xlim(-0.6,0.6)+
  ylim(-0.6,0.7)+
  stat_ellipse(size =.5) +
  scale_color_manual(values = cbbPalette, labels = c("Control", "Treatment"), na.translate = FALSE) +
  theme(panel.grid = element_blank(),
        panel.background = element_rect(fill = "white"),
        panel.border = element_rect(color = "black", fill = NA, size = 0.5),
        plot.title = element_text(hjust = 0.01, vjust=-7, face = "bold"),
        plot.caption = element_text(hjust = 0),
        axis.title.x = element_text(),
        axis.title.y = element_blank(),
        axis.text.x = element_text(),
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank())+
  theme(plot.margin = unit(c(-1.4,-1,-1.4,-1), "cm"))+
  theme(strip.background = element_rect(colour="black", fill="white"))+
  theme(panel.grid.major  = element_line(color ="gray93",size = 0.5,linetype = 1))+
  labs(title = "H")

#p.nitrogen2

p.nitrogen3 <-  ggplot(mds_data,aes(x = MDS1, y = MDS2, color = n3))+
  geom_point(size = 3)+
  scale_shape_manual(values=c(2,3,4,7,8,10,19))+
  labs(shape = "Control Type", colour = "")+
  xlim(-0.6,0.6)+
  ylim(-0.6,0.7)+
  stat_ellipse(size =.5) +
  scale_color_manual(values = cbbPalette, labels = c("Control", "Treatment"), na.translate = FALSE) +
  theme(panel.grid = element_blank(),
        panel.background = element_rect(fill = "white"),
        panel.border = element_rect(color = "black", fill = NA, size = 0.5),
        plot.title = element_text(hjust = 0.01, vjust=-7, face = "bold"),
        plot.caption = element_text(hjust = 0),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.x = element_text(),
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank())+
  theme(plot.margin = unit(c(-1.4,-1,-1.4,-1), "cm"))+
  theme(strip.background = element_rect(colour="black", fill="white"))+
  theme(panel.grid.major  = element_line(color ="gray93",size = 0.5,linetype = 1))+
  labs(title = "I")

#p.nitrogen3


p.invasion1 <-  ggplot(mds_data,aes(x = MDS1, y = MDS2, color = i1))+
  geom_point(size = 3)+
  scale_shape_manual(values=c(2,3,4,7,8,10,19))+
  labs(shape = "Control Type", colour = "")+
  xlim(-0.6,0.6)+
  ylim(-0.6,0.7)+
  stat_ellipse(size =.5) +
  scale_color_manual(values = cbbPalette, labels = c("Control", "Treatment"), na.translate = FALSE) +
  theme(panel.grid = element_blank(),
        panel.background = element_rect(fill = "white"),
        panel.border = element_rect(color = "black", fill = NA, size = 0.5),
        plot.title = element_text(hjust = 0.01, vjust=-7, face = "bold"),
        plot.caption = element_text(hjust = 0),
        axis.title.x = element_blank(),
        axis.title.y = element_text(color="black", vjust=1),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank())+
  theme(plot.margin = unit(c(-1.4,-1,-1.4,-1), "cm"))+
  theme(strip.background = element_rect(colour="black", fill="white"))+
  labs(title = "Invasion Studies #1, #2, #3")+
  theme(panel.grid.major  = element_line(color ="gray93",size = 0.5,linetype = 1))+
  labs(title = "D")

#p.invasion1

p.invasion2 <-  ggplot(mds_data,aes(x = MDS1, y = MDS2, color = i2))+
  geom_point(size = 3)+
  scale_shape_manual(values=c(2,3,4,7,8,10,19))+
  labs(shape = "Control Type", colour = "")+
  xlim(-0.6,0.6)+
  ylim(-0.6,0.7)+
  stat_ellipse(size =.5) +
  scale_color_manual(values = cbbPalette, labels = c("Control", "Treatment"), na.translate = FALSE) +
  theme(panel.grid = element_blank(),
        panel.background = element_rect(fill = "white"),
        panel.border = element_rect(color = "black", fill = NA, size = 0.5),
        plot.title = element_text(hjust = 0.01, vjust=-7, face = "bold"),
        plot.caption = element_text(hjust = 0),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank())+
  theme(plot.margin = unit(c(-1.4,-1,-1.4,-1), "cm"))+
  theme(strip.background = element_rect(colour="black", fill="white"))+
  theme(panel.grid.major  = element_line(color ="gray93",size = 0.5,linetype = 1))+
  labs(title = "E")

#p.invasion2

p.invasion3 <-  ggplot(mds_data,aes(x = MDS1, y = MDS2, color = i3))+
  geom_point(size = 3)+
  scale_shape_manual(values=c(2,3,4,7,8,10,19))+
  labs(shape = "Control Type", colour = "")+
  xlim(-0.6,0.6)+
  ylim(-0.6,0.7)+
  stat_ellipse(size =.5) +
  scale_color_manual(values = cbbPalette, labels = c("Control", "Treatment"), na.translate = FALSE) +
  theme(panel.grid = element_blank(),
        panel.background = element_rect(fill = "white"),
        panel.border = element_rect(color = "black", fill = NA, size = 0.5),
        plot.title = element_text(hjust = 0.01, vjust=-7, face = "bold"),
        plot.caption = element_text(hjust = 0),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank())+
  theme(plot.margin = unit(c(-1.4,-1,-1.4,-1), "cm"))+
  theme(strip.background = element_rect(colour="black", fill="white"))+
  theme(panel.grid.major  = element_line(color ="gray93",size = 0.5,linetype = 1))+
  labs(title = "F")

#p.invasion3


p.warm1 <-  ggplot(mds_data,aes(x = MDS1, y = MDS2, color = w1))+
  geom_point(size = 3)+
  scale_shape_manual(values=c(2,3,4,7,8,10,19))+
  labs(shape = "Control Type", colour = "")+
  stat_ellipse(size =.5) +
  xlim(-0.6,0.6)+
  ylim(-0.6,0.7)+
  scale_color_manual(values = cbbPalette, labels = c("Control", "Treatment"), na.translate = FALSE) +
  theme(panel.grid = element_blank(),
        panel.background = element_rect(fill = "white"),
        panel.border = element_rect(color = "black", fill = NA, size = 0.5),
        plot.title = element_text(hjust = 0.01, vjust=-7, face = "bold"),
        plot.caption = element_text(hjust = 0),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.ticks.x = element_blank(),
        axis.text.x = element_blank())+
  theme(plot.margin = unit(c(-1.4,-1,-1.4,-1), "cm"))+
  theme(strip.background = element_rect(colour="black", fill="white"))+
  labs(title = "Warm Studies #1, #2, #3")+
  theme(panel.grid.major  = element_line(color ="gray93",size = 0.5,linetype = 1))+
  labs(title = "A")

#p.warm1

p.warm2 <-  ggplot(mds_data,aes(x = MDS1, y = MDS2, color = w2))+
  geom_point(size = 3)+
  scale_shape_manual(values=c(2,3,4,7,8,10,19))+
  xlim(-0.6,0.6)+
  ylim(-0.6,0.7)+
  labs(shape = "Control Type", colour = "")+
  stat_ellipse(size =.5) +
  scale_color_manual(values = cbbPalette, labels = c("Control", "Treatment"), na.translate = FALSE) +
  theme(panel.grid = element_blank(),
        panel.background = element_rect(fill = "white"),
        panel.border = element_rect(color = "black", fill = NA, size = 0.5),
       # plot.title = element_text(hjust = 0.5, size = 17, face = "bold"),
        plot.title = element_text(hjust = 0.01, vjust=-7, face = "bold"),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        axis.ticks.y = element_blank())+
  theme(plot.margin = unit(c(-1.4,-1,-1.4,-1), "cm"))+
  theme(strip.background = element_rect(colour="black", fill="white"))+
  theme(panel.grid.major  = element_line(color ="gray93",size = 0.5,linetype = 1))+
  labs(title = "B")


#p.warm2

p.warm3 <-  ggplot(mds_data,aes(x = MDS1, y = MDS2, color = w3))+
  geom_point(size = 3)+
  scale_shape_manual(values=c(2,3,4,7,8,10,19))+
  labs(shape = "Control Type", colour = "")+
  xlim(-0.6,0.6)+
  ylim(-0.6,0.7)+
  stat_ellipse(size =.5) +
  scale_color_manual(values = cbbPalette, labels = c("Control", "Treatment"), na.translate = FALSE) +
  theme(panel.grid = element_blank(),
        panel.background = element_rect(fill = "white"),
        panel.border = element_rect(color = "black", fill = NA, size = 0.5),
        plot.title = element_text(hjust = 0.01, vjust=-7, face = "bold"),
        plot.caption = element_text(hjust = 0),
        axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.y = element_blank(),
        axis.text.x = element_blank(),
        axis.ticks.y = element_blank(),
        axis.ticks.x = element_blank())+
  theme(plot.margin = unit(c(-1.4,-1,-1.4,-1), "cm"))+
  theme(strip.background = element_rect(colour="black", fill="white"))+
  theme(panel.grid.major  = element_line(color ="gray93",size = 0.5,linetype = 1))+
  labs(title = "C")

#p.warm3


cbbPalette <- c("cornflowerblue", "goldenrod1")

library(ggpubr)
figure <- ggarrange( p.warm1, p.warm2, p.warm3, p.invasion1, p.invasion2, p.invasion3, p.nitrogen1, p.nitrogen2, p.nitrogen3,
                    common.legend = TRUE, legend = "bottom" ,align = "hv", nrow = 3, ncol = 3,
                    hjust = -1.5, vjust=2)+
          theme(plot.margin = margin(1.2,0.3,0,1.3, "cm"))
          

figure <- annotate_figure(figure, top = text_grob("Beta Diversity of Warm, Invasion, and Nitrogen Treatments", face = "bold", 
                                        size = 17))


library(svglite)

#This actually save the plot in a image
ggsave(file="final.beta.svg", plot=figure, width=14, height=8)


##### permanova #####
#install.packages("PERMANOVA")

library(PERMANOVA)

#change lables
t_otu$SampleID <- rownames(t_otu)
sam_data$SampleID <- rownames(sam_data)
group_data <- dplyr::left_join(t_otu, sam_data)
t_otu <- t(otu_data)
t_otu <- as.data.frame(t_otu)


#make groupes
groups <- factor(group_data$Grouped)
groups

#bray analysis
bray <- DistContinuous(t_otu, coef="Bray_Curtis")

permanova <- PERMANOVA(bray, groups, CoordPrinc = TRUE)

plot(permanova)

summary(permanova)



### permanova with random effects #####
#example
  #Variable: Bray-Curtis dissimilarity matrix (dist) Fixed factor: Disease (Dis) Random factor: Island
  #adonis1<- adonis(dist ~ Dis, strata = Island, data = meta)
library(vegan)


dist_dml <- vegan::vegdist(group_data[,1:22852], method="bray", binary=FALSE, diag=TRUE, upper=TRUE, na.rm=FALSE)

dist <- rank(dist_dml)

set.seed(12345)
y_permanova <- vegan::adonis(dist_dml ~ group_data$Grouped,
                             data=group_data, permutations=999, method="bray", strata = group_data$Site.1)
y_permanova


library(RVAideMemoire)

citation("RVAideMemoire")

#singular control
permtst <- RVAideMemoire::pairwise.perm.manova(resp = dist_dml, fact = sam_data$Grouped, 
                                               test = "Wilks", nperm = 999, progress = TRUE, p.method = "none")

df.perm <- reshape2::melt(permtst$p.value)

#divided control
permtst <- RVAideMemoire::pairwise.perm.manova(resp = dist_dml, fact = sam_data$Treatment, 
                                               test = "Wilks", nperm = 999, progress = TRUE, p.method = "none")

df.perm.controls <- reshape2::melt(permtst$p.value)

write.csv(df.perm.controls, "pairwise_perm.csv")

results <- adonis(group_data[,1:22852] ~ group_data$Grouped,
                 data = group_data, permutations = 999, method = "bray", strata = group_data$Site.1)

results

library(pairwiseAdonis)
pairwise.adonis2(group_data[,1:22852] ~ group_data$Grouped,
                 data = group_data, permutations = 999, method = "bray", strata = group_data$Site.1)


##### betadisper ##### 
#https://cran.r-project.org/web/packages/hagis/vignettes/betadiversity.html

#change labels
t_otu$SampleID <- rownames(t_otu)
sam_data$SampleID <- rownames(sam_data)
group_data <- dplyr::left_join(t_otu, sam_data)



# make gouping
groups <- factor(group_data$Grouped)
groups

dis <- vegdist(t_otu, "bray", na.rm = TRUE)

beta_dis <- betadisper(dis, group_data$Grouped)

beta_dis_anova <- anova(beta_dis) 
beta_dis_anova

beta_dis_TukeyHSD <- TukeyHSD(beta_dis)
beta_dis_TukeyHSD

write.csv(beta_dis_TukeyHSD$group, "beta_dis_TukeyHSD.csv")

boxplot(beta_dis,ellipse = TRUE)


anova.sh = aov(beta_dis$vectors ~ sample_data(physeq1)$Grouped)
anova.sh

###### taxa visualization ######

#https://rstudio-pubs-static.s3.amazonaws.com/403427_6537014d60e44e1b9d72514d5fb787b5.html

#https://www.nicholas-ollberding.com/post/introduction-to-the-statistical-analysis-of-microbiome-data-in-r/

plot_bar(physeq1, x="Grouped", fill="family") + theme(legend.position = "none")

plot_bar(physeq1, "Grouped", fill="order") + geom_bar(stat="identity") + theme(legend.position = "none")
